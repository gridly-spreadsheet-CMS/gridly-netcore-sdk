/*
 * Gridly API
 *
 * Gridly API documentation
 *
 * The version of the OpenAPI document: 4.29.1
 * Contact: support@gridly.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Com.Gridly.Client;
using Com.Gridly.Api;
// uncomment below to import models
//using Com.Gridly.Model;

namespace Com.Gridly.Test.Api
{
    /// <summary>
    ///  Class for testing GlossaryApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class GlossaryApiTests : IDisposable
    {
        private GlossaryApi instance;

        public GlossaryApiTests()
        {
            instance = new GlossaryApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of GlossaryApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' GlossaryApi
            //Assert.IsType<GlossaryApi>(instance);
        }

        /// <summary>
        /// Test Create
        /// </summary>
        [Fact]
        public void CreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateGlossary createGlossary = null;
            //var response = instance.Create(createGlossary);
            //Assert.IsType<Glossary>(response);
        }

        /// <summary>
        /// Test Delete
        /// </summary>
        [Fact]
        public void DeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long id = null;
            //instance.Delete(id);
        }

        /// <summary>
        /// Test ExportFile
        /// </summary>
        [Fact]
        public void ExportFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long id = null;
            //List<string> fields = null;
            //ExportFormat1? format = null;
            //List<string> langs = null;
            //instance.ExportFile(id, fields, format, langs);
        }

        /// <summary>
        /// Test Get
        /// </summary>
        [Fact]
        public void GetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long id = null;
            //var response = instance.Get(id);
            //Assert.IsType<Glossary>(response);
        }

        /// <summary>
        /// Test GetAll
        /// </summary>
        [Fact]
        public void GetAllTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAll();
            //Assert.IsType<List<Glossary>>(response);
        }

        /// <summary>
        /// Test ImportFile
        /// </summary>
        [Fact]
        public void ImportFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long id = null;
            //ImportOption? importOption = null;
            //Object file = null;
            //instance.ImportFile(id, importOption, file);
        }

        /// <summary>
        /// Test Update
        /// </summary>
        [Fact]
        public void UpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long id = null;
            //UpdateGlossary updateGlossary = null;
            //instance.Update(id, updateGlossary);
        }
    }
}
